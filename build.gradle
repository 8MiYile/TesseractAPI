import org.gradle.jvm.toolchain.JavaLanguageVersion
plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.11.0-SNAPSHOT" apply false
    id "maven-publish"
}

architectury {
    minecraft = rootProject.minecraft_version
}

def isCI = System.getenv("GITHUB_ACTION")
def isRELEASE = System.getenv("GITHUB_RELEASE")
def gitHash() {
    String hash = System.getenv("GITHUB_SHA")
    if (hash != null) return hash.substring(0,8)
    return ""
}

subprojects {
    apply plugin: "dev.architectury.loom"
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.17.1+build.32:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archive_base_name
    version = rootProject.minecraft_version-rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    java {
        withSourcesJar()
    }

    if (isCI) {
        version = version + "-" + gitHash()
    }
    afterEvaluate { project ->
        project.tasks.publishToMavenLocal {
            onlyIf {
                return rootProject.name == "${modid}"
            }
        }
    }
}

